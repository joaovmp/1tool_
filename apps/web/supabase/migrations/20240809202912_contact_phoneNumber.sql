create table "public"."contact_phone_numbers" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "user" uuid default auth.uid(),
    "number" text,
    "type" text
);


alter table "public"."contact_phone_numbers" enable row level security;

CREATE UNIQUE INDEX phone_numbers_pkey ON public.contact_phone_numbers USING btree (id);

alter table "public"."contact_phone_numbers" add constraint "phone_numbers_pkey" PRIMARY KEY using index "phone_numbers_pkey";

alter table "public"."contact_phone_numbers" add constraint "phone_numbers_user_fkey" FOREIGN KEY ("user") REFERENCES accounts(id) ON UPDATE CASCADE ON DELETE SET NULL not valid;

alter table "public"."contact_phone_numbers" validate constraint "phone_numbers_user_fkey";

grant delete on table "public"."contact_phone_numbers" to "anon";

grant insert on table "public"."contact_phone_numbers" to "anon";

grant references on table "public"."contact_phone_numbers" to "anon";

grant select on table "public"."contact_phone_numbers" to "anon";

grant trigger on table "public"."contact_phone_numbers" to "anon";

grant truncate on table "public"."contact_phone_numbers" to "anon";

grant update on table "public"."contact_phone_numbers" to "anon";

grant delete on table "public"."contact_phone_numbers" to "authenticated";

grant insert on table "public"."contact_phone_numbers" to "authenticated";

grant references on table "public"."contact_phone_numbers" to "authenticated";

grant select on table "public"."contact_phone_numbers" to "authenticated";

grant trigger on table "public"."contact_phone_numbers" to "authenticated";

grant truncate on table "public"."contact_phone_numbers" to "authenticated";

grant update on table "public"."contact_phone_numbers" to "authenticated";

grant delete on table "public"."contact_phone_numbers" to "service_role";

grant insert on table "public"."contact_phone_numbers" to "service_role";

grant references on table "public"."contact_phone_numbers" to "service_role";

grant select on table "public"."contact_phone_numbers" to "service_role";

grant trigger on table "public"."contact_phone_numbers" to "service_role";

grant truncate on table "public"."contact_phone_numbers" to "service_role";

grant update on table "public"."contact_phone_numbers" to "service_role";

-- CREATE TRIGGER accounts_teardown AFTER DELETE ON public.accounts FOR EACH ROW EXECUTE FUNCTION supabase_functions.http_request('http://host.docker.internal:3000/api/db/webhook', 'POST', '{"Content-Type":"application/json", "X-Supabase-Event-Signature":"WEBHOOKSECRET"}', '{}', '5000');

-- CREATE TRIGGER invitations_insert AFTER INSERT ON public.invitations FOR EACH ROW EXECUTE FUNCTION supabase_functions.http_request('http://host.docker.internal:3000/api/db/webhook', 'POST', '{"Content-Type":"application/json", "X-Supabase-Event-Signature":"WEBHOOKSECRET"}', '{}', '5000');

-- CREATE TRIGGER subscriptions_delete AFTER DELETE ON public.subscriptions FOR EACH ROW EXECUTE FUNCTION supabase_functions.http_request('http://host.docker.internal:3000/api/db/webhook', 'POST', '{"Content-Type":"application/json", "X-Supabase-Event-Signature":"WEBHOOKSECRET"}', '{}', '5000');


