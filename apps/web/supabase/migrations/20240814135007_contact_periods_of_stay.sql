drop policy "Enable insert for authenticated users only" on "public"."contact_phone_numbers";

drop policy "Enable read" on "public"."contact_phone_numbers";

drop policy "Enable update" on "public"."contact_phone_numbers";

drop policy "delete_policy" on "public"."contact_phone_numbers";

create table "public"."contact_periods_of_stay" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "dateOfEntry" text not null,
    "number_1_94" text not null,
    "classOfAdmission" text not null,
    "mannerOfEntry" text not null,
    "statusAfterAdmission" text not null,
    "dateStatusWasGranted" text not null,
    "dateStatusExpires" text not null,
    "authorizedStayExpiry" text not null,
    "purposeOfStay" text not null,
    "modeOfTravel" text not null,
    "passportNumber" text not null,
    "travelDocumentNumber" text not null,
    "passport_travelDocCountry" text not null,
    "passport_travelDocIssued" text not null,
    "passport_travelDocExpires" text not null,
    "cityOfResidenceInUs" text not null,
    "firstNameUsed" text not null,
    "middleNameUsed" text not null,
    "lastNameUsed" text not null,
    "cityOfExit" text not null,
    "stateOfExit" text not null,
    "dateOfExit" text not null,
    "mostRecentEntry" boolean not null,
    "plannedStay" boolean not null,
    "onH_LStatus" boolean not null,
    "onRStatus" boolean not null,
    "grantedDurationOfStatus" boolean not null,
    "user" uuid default auth.uid()
);


alter table "public"."contact_periods_of_stay" enable row level security;

CREATE UNIQUE INDEX contact_periods_of_stay_pkey ON public.contact_periods_of_stay USING btree (id);

alter table "public"."contact_periods_of_stay" add constraint "contact_periods_of_stay_pkey" PRIMARY KEY using index "contact_periods_of_stay_pkey";

alter table "public"."contact_periods_of_stay" add constraint "contact_periods_of_stay_user_fkey" FOREIGN KEY ("user") REFERENCES accounts(id) ON UPDATE CASCADE ON DELETE SET NULL not valid;

alter table "public"."contact_periods_of_stay" validate constraint "contact_periods_of_stay_user_fkey";

grant delete on table "public"."contact_periods_of_stay" to "anon";

grant insert on table "public"."contact_periods_of_stay" to "anon";

grant references on table "public"."contact_periods_of_stay" to "anon";

grant select on table "public"."contact_periods_of_stay" to "anon";

grant trigger on table "public"."contact_periods_of_stay" to "anon";

grant truncate on table "public"."contact_periods_of_stay" to "anon";

grant update on table "public"."contact_periods_of_stay" to "anon";

grant delete on table "public"."contact_periods_of_stay" to "authenticated";

grant insert on table "public"."contact_periods_of_stay" to "authenticated";

grant references on table "public"."contact_periods_of_stay" to "authenticated";

grant select on table "public"."contact_periods_of_stay" to "authenticated";

grant trigger on table "public"."contact_periods_of_stay" to "authenticated";

grant truncate on table "public"."contact_periods_of_stay" to "authenticated";

grant update on table "public"."contact_periods_of_stay" to "authenticated";

grant delete on table "public"."contact_periods_of_stay" to "service_role";

grant insert on table "public"."contact_periods_of_stay" to "service_role";

grant references on table "public"."contact_periods_of_stay" to "service_role";

grant select on table "public"."contact_periods_of_stay" to "service_role";

grant trigger on table "public"."contact_periods_of_stay" to "service_role";

grant truncate on table "public"."contact_periods_of_stay" to "service_role";

grant update on table "public"."contact_periods_of_stay" to "service_role";

create policy "Enable insert for authenticated users only"
on "public"."contact_periods_of_stay"
as permissive
for insert
to authenticated
with check (true);


create policy "delete"
on "public"."contact_periods_of_stay"
as permissive
for delete
to authenticated
using (true);


create policy "select"
on "public"."contact_periods_of_stay"
as permissive
for select
to authenticated
using (true);


create policy "update"
on "public"."contact_periods_of_stay"
as permissive
for update
to authenticated
using (true);


create policy "authenticated"
on "public"."contact_phone_numbers"
as permissive
for all
to public
using (true);



